#BlueJ class context
comment0.target=Test_main
comment1.params=
comment1.target=Test_main()
comment10.params=
comment10.target=void\ testInsertarPasoRepetido()
comment11.params=
comment11.target=void\ testInsertarPasoSimilar()
comment12.params=
comment12.target=void\ testConversionCadenaCaracteresEspeciales()
comment13.params=
comment13.target=void\ testConversionCadenaMinusculas()
comment14.params=
comment14.target=void\ testIngresarReceta()
comment15.params=
comment15.target=void\ testRecetaNulaInvalida()
comment16.params=
comment16.target=void\ testAgregarIngredienteSimilar()
comment17.params=
comment17.target=void\ testCrearIngredienteConValorNegativo()
comment18.params=
comment18.target=void\ testCrearUnaArchivoReceta()
comment19.params=
comment19.target=void\ testVerificarIngredienteEnUnaReceta()
comment2.params=
comment2.target=void\ set()
comment20.params=
comment20.target=void\ testVerificarIngredienteEnUnaReceta2()
comment21.params=
comment21.target=void\ testVerificarProcesoExistente()
comment22.params=
comment22.target=void\ testVerificarProcesoNuevo()
comment23.params=
comment23.target=void\ testValidarUnaRecetaValida()
comment24.params=
comment24.target=void\ testInvalidarRecetaNula()
comment25.params=
comment25.target=void\ testInvalidaRecetaInvalida()
comment26.params=
comment26.target=void\ testValidarUnaRecetaInvalida()
comment27.params=
comment27.target=void\ testValidarUnaRecetaNula()
comment28.params=
comment28.target=void\ testCrearArchivo()
comment29.params=
comment29.target=void\ testCrearUnaRecetaConContenido()
comment3.params=
comment3.target=void\ setUp()
comment30.params=
comment30.target=void\ testImpresionRecetaFormato()
comment31.params=
comment31.target=void\ testVerificarArchivoVerificado()
comment32.params=
comment32.target=void\ testArchivoInexistente()
comment33.params=
comment33.target=void\ testValidarRecetaValida()
comment34.params=
comment34.target=void\ testValidarReceta()
comment35.params=
comment35.target=void\ testInvalidarRecetaInvalida1()
comment36.params=
comment36.target=void\ testInvalidarRecetaNula2()
comment37.params=
comment37.target=void\ testGenerarArchivo()
comment38.params=
comment38.target=void\ testNogenerarArchivoSiNoTenemosDirectorio()
comment39.params=
comment39.target=void\ testEscrituraIngredientes()
comment4.params=
comment4.target=void\ tearDown()
comment40.params=
comment40.target=void\ testEscrituraIngredientes2()
comment41.params=
comment41.target=void\ testEscrituraReceta()
comment42.params=
comment42.target=void\ testEscrituraRecetaDescripcion()
comment43.params=
comment43.target=void\ testEscrituraArchivo()
comment44.params=
comment44.target=void\ testEscrituraRecetaArchivo()
comment45.params=
comment45.target=void\ testEscrituraArhivoValidacion()
comment46.params=
comment46.target=void\ testProcesoNulo()
comment5.params=
comment5.target=void\ testInsertarIngredienteNuevo()
comment5.text=@Test\ \r\n\ \ \ \ public\ void\ test1()\ throws\ Exception{\r\n\ \ \ \ Receta\ a\ \=\ new\ Receta("nombre");\r\n\ \ \ \ Ingrediente\ i\ \=\ new\ Ingrediente(4,"litros","aceite");\r\n\ \ \ \ a\ \=\ mock(Receta.class);\r\n\ \ \ \ a.agregarIngrediente(i);\r\n\ \ \ \ when(a.agregarIngrediente(i)).thenReturn(true);\r\n\ \ \ \ System.out.println(a.toString());\r\n\ \ \ \ assertTrue(a.agregarIngrediente(i));\r\n}
comment6.params=
comment6.target=void\ testMismoInsertarIngredienteRepetido()
comment7.params=
comment7.target=void\ testInsertarIngredienteNulo()
comment8.params=
comment8.target=void\ testIngredientesIguales()
comment9.params=
comment9.target=void\ testInsertarUnPaso()
numComments=47
